// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Unisphere.Explorer.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250310142354_physicalAdresse")]
    partial class PhysicalAdresse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("explorer")
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Unisphere.Explorer.Domain.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid")
                        .HasColumnName("author_id");

                    b.Property<DateOnly>("CheckIn")
                        .HasColumnType("date")
                        .HasColumnName("check_in");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("check_out");

                    b.Property<Guid>("HouseId")
                        .HasColumnType("uuid")
                        .HasColumnName("house_id");

                    b.HasKey("Id")
                        .HasName("pk_bookings");

                    b.HasIndex("HouseId")
                        .HasDatabaseName("ix_bookings_house_id");

                    b.ToTable("bookings", "explorer");
                });

            modelBuilder.Entity("Unisphere.Explorer.Domain.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid")
                        .HasColumnName("author_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_houses");

                    b.ToTable("houses", "explorer");
                });

            modelBuilder.Entity("Unisphere.Explorer.Domain.Booking", b =>
                {
                    b.HasOne("Unisphere.Explorer.Domain.House", "House")
                        .WithMany("Bookings")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_bookings_houses_house_id");

                    b.Navigation("House");
                });

            modelBuilder.Entity("Unisphere.Explorer.Domain.House", b =>
                {
                    b.OwnsOne("Unisphere.Explorer.Domain.Notation", "Notation", b1 =>
                        {
                            b1.Property<Guid>("HouseId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<int>("CleanlinessNote")
                                .HasColumnType("integer")
                                .HasColumnName("CleanlinessNote");

                            b1.Property<int>("CommunicationNote")
                                .HasColumnType("integer")
                                .HasColumnName("CommunicationNote");

                            b1.Property<int>("GlobalNote")
                                .HasColumnType("integer")
                                .HasColumnName("GlobalNote");

                            b1.Property<int>("LocationNote")
                                .HasColumnType("integer")
                                .HasColumnName("LocationNote");

                            b1.HasKey("HouseId");

                            b1.ToTable("houses", "explorer");

                            b1.WithOwner()
                                .HasForeignKey("HouseId")
                                .HasConstraintName("fk_houses_houses_id");
                        });

                    b.OwnsOne("Unisphere.Explorer.Domain.PhysicalAddress", "PhysicalAddress", b1 =>
                        {
                            b1.Property<Guid>("HouseId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("City");

                            b1.Property<string>("CountryCode")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CountryCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Street");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("ZipCode");

                            b1.HasKey("HouseId");

                            b1.ToTable("houses", "explorer");

                            b1.WithOwner()
                                .HasForeignKey("HouseId")
                                .HasConstraintName("fk_houses_houses_id");
                        });

                    b.Navigation("Notation")
                        .IsRequired();

                    b.Navigation("PhysicalAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("Unisphere.Explorer.Domain.House", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
